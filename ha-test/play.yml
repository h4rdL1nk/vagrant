---

- name: test
  hosts: etcd 
  become: true
  tasks:
    - name: Install docker CE 
      yum:
        name: "{{ item }}"
        state: present 
      with_items:
        - https://download.docker.com/linux/centos/7/x86_64/stable/Packages/docker-ce-17.12.1.ce-1.el7.centos.x86_64.rpm
        - python-docker-py 

    - name: Enable docker service
      service:
        name: docker 
        state: started
        enabled: yes 

    - name: Create data directories
      file:
        state: directory 
        path: "{{ item }}" 
      with_items:
        - /data
        - /data/etcd

    - name: Create SELinux module for logrotate
      copy:
        dest: /tmp/logrotate-docker.te
        content: |
          module logrotate-docker 1.0;

          require {
            type svirt_sandbox_file_t;
            type logrotate_t;
            class file getattr;
            class file setattr;
            class file create;
            class file rename;
          }

          allow logrotate_t svirt_sandbox_file_t:file getattr;
          allow logrotate_t svirt_sandbox_file_t:file setattr;
          allow logrotate_t svirt_sandbox_file_t:file create;
          allow logrotate_t svirt_sandbox_file_t:file rename;
      register: module_file_create

    - name: Check SELinux module
      shell: "checkmodule -M -m -o /tmp/logrotate-docker.mod /tmp/logrotate-docker.te"
      when: module_file_create.changed
      register: module_check

    - name: Package SELinux module
      shell: "semodule_package -o /tmp/logrotate-docker.pp -m /tmp/logrotate-docker.mod"
      when: module_check.changed
      register: module_package

    - name: Install SELinux module
      shell: "semodule -i /tmp/logrotate-docker.pp"
      when: module_package.changed
      register: module_install

    - name: Enable SELinux module
      shell: "semodule -e logrotate-docker"
      when: module_install.changed

    - name: Start etcd containers
      docker_container:
        state: started
        name: etcd
        image: elcolio/etcd 
        volumes:
          - /data/etcd:/data:rw,Z
        published_ports:
          - "{{ ip }}:2379:2379"
          - "{{ ip }}:2380:2380"
        memory: 200m
        memory_reservation: 150m
        command: "--name {{ ansible_hostname }} --data-dir=/data --initial-cluster-token etcd-cluster0 --initial-cluster-state new --listen-peer-urls http://0.0.0.0:2380 --listen-client-urls http://0.0.0.0:2379 --advertise-client-urls http://{{ ip }}:2379 --initial-advertise-peer-urls http://{{ ip }}:2380 --initial-cluster {% for server in groups['etcd'] %}{{ server }}=http://{{ hostvars[server]['ip'] }}:2380{% if loop.index < groups['etcd']|length %},{% endif %}{% endfor %}"

