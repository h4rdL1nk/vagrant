
load 'config.rb'
load 'aws_access.rb'
$ansible_config = '../../ansible/ansible.cfg'

SERVERS.each do |server|
    if server[:swarm][:role] == "manager" and server[:swarm][:manager][:initiator]
    then
        $swarmInitiatorIp = server[:aws][:ec2][:network][:private]
    end
end

Vagrant.configure("2") do |config|

    SERVERS.each do |server|

        config.vm.define "#{server[:hostname]}", primary: true do |d|

            d.vm.box = "dummy"

            d.vm.hostname = "#{server[:hostname]}"
            d.vm.synced_folder '.', '/vagrant', disabled: true

            d.vm.provider :aws do |aws,override|
                aws.instance_type = "#{server[:aws][:ec2][:type]}"
                aws.access_key_id = "#{AWS[:credentials][:keyid]}" 
                aws.secret_access_key = "#{AWS[:credentials][:accesskey]}" 
                aws.keypair_name = "#{server[:aws][:ec2][:keypair]}" 
                aws.region = "#{AWS[:credentials][:region]}" 
                aws.ami = "#{server[:aws][:ec2][:ami][:id]}" 
                aws.subnet_id = "#{server[:aws][:ec2][:network][:subnet]}"
                aws.private_ip_address = "#{server[:aws][:ec2][:network][:private]}"
                aws.associate_public_ip = "#{server[:aws][:ec2][:network][:public]}" 
                aws.security_groups = server[:aws][:ec2][:securitygroups]
                aws.tags = {
                        'Name' => "#{server[:hostname]}",
                        'app' => "#{server[:swarm][:role]}",
                        'os' => "#{server[:aws][:ec2][:ami][:os]}" 
                }

                if defined? server[:aws][:ec2][:network][:public]
                then     
                    aws.ssh_host_attribute = :public_ip_address
                else
                    aws.ssh_host_attribute = :privete_ip_address
                end

                override.ssh.username = "#{server[:aws][:ec2][:ami][:ssh][:user]}" 
                override.ssh.private_key_path = "./key.pem"
            end

            if server[:aws][:ec2][:ami][:os] == "ubuntu"
            then
                d.vm.provision "shell", inline: "apt-get update && apt-get install -y python-minimal python2.7"
            end

            d.vm.provision "ansible",
                config_file: $ansible_config ,
                raw_arguments: "-e swarm=true -e rol=#{server[:swarm][:role]}",
                playbook: "config.yml"

            $addNodeArgs = $swarmInitiatorIp + " #{server[:swarm][:role]}"

            case server[:swarm][:role]
                when "manager"
                    if server[:swarm][:manager][:initiator]
                    then
                        d.vm.provision "shell",
                            path: "../../scripts/swarm/swarm-init.sh"
                    else
                        d.vm.provision "shell",
                            args: $addNodeArgs,
                            path: "../../scripts/swarm/swarm-add-node.sh"
                    end
                when "worker"
                    d.vm.provision "shell",
                    args: $addNodeArgs,
                        path: "../../scripts/swarm/swarm-add-node.sh"
            end

        end

    end

end

